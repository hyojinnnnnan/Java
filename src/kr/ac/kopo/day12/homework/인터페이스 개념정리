[인터페이스 개념정리]

1. 인터페이스는 표준안이자 앞으로 사용할 기능들의 집합이자 추상 메소드들의 집합이다
1-1. 표준안을 만드는 개념이라면 추상 클래스와 비슷한거 아닌가라고 생각할 수 있지만, 인터페이스는 extends의 한계를 극복할 수 있다.
	 * 	extends를 사용하면 하위 클래스는 단 1개의 부모 클래스만을 가질 수 있다 (단일 상속)
	 * 	이렇게 되면 클래스의 기능을 확장하는데 한계가 있다 
	 * 	상위 클래스 즉, 부모 클래스 위에 부모 클래스의 부모 클래스를 만들면 해결되는거 아닌가라고 생각할 수 있는데
	 *  이 경우 is a, kind of 관계가 성립하지 않을 수 있어 애초에 extends를 하는 의미가 퇴색되는 것이다
	 *  이 문제점을 해결하고자 인터페이스가 등장한 것이다 -> 인터페이스의 경우 '다중 상속'이 가능하기 때문이다

2. 인터페이스는 상수(public static final)와 추상메소드(public abstract)로만 구성되어 있다

3. 추상클래스와 동일하게 new를 통한 객체생성이 불가능하다 -> 인터페이스를 상속받는 자식클래스로 객체를 만든다

4. 인터페이스를 상속받는 하위 클래스는 인터페이스의 모든 추상메소드를 반드시 오바라이딩해야 한다 
4-1. 아니면, 하위 클래스를 다시 추상 클래스로 만들어야 한다